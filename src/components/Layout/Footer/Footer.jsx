import React, { useState } from "react";
import "./Footer.scss";
import { toast, Slide, Bounce } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import axios from "axios";
import { useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";

const Footer = () => {
  const [name, setName] = useState("");
  const [answer, setAnswer] = useState(""); // ‚úÖ –≤–º–µ—Å—Ç–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞/—Å–≤—è–∑–∏
  const [modal, setModal] = useState(false);
  const nav = useNavigate();
  const { user } = useSelector((s) => s.userReducer);

  const clearForm = () => {
    setName("");
    setAnswer("");
  };

  const isEmpty = (val) => val.length === 0 || val.replaceAll(" ", "") === "";

  const sendToTelegram = () => {
    if (isEmpty(name) || isEmpty(answer)) {
      toast.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!", {
        position: "bottom-right",
        autoClose: 4000,
        theme: "colored",
        transition: Bounce,
      });
      return;
    }

    const chat_id = "-1002708842759";
    const token = "7784579498:AAE4SwLV99YhzCxGvp8so-GaYdzWdQb7WrU";
    const api_url = `https://api.telegram.org/bot${token}/sendMessage`;

    const userData = {
      chat_id,
      parse_mode: "HTML",
      text: `
<b>üìã –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞</b>\n
<b>üë§ –ò–º—è:</b> ${name}
<b>‚úÖ –û—Ç–≤–µ—Ç:</b> ${answer}
      `,
    };

    axios
      .post(api_url, userData)
      .then(() => {
        toast.success("‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!", {
          position: "bottom-right",
          autoClose: 4000,
          theme: "colored",
          transition: Slide,
        });
        clearForm();
        setModal(false);
      })
      .catch(() => {
        toast.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏", {
          position: "bottom-right",
          autoClose: 4000,
          theme: "colored",
          transition: Slide,
        });
      });
  };

  return (
    <div id="request">
      <div className="container">
        <div className="request">
          <h1>–ê–ù–ö–ï–¢–ê</h1>
          <p>–¢–æ–π–≥–æ –∫–µ–ª–µ—Ä–∏“£–∏–∑–¥–∏–Ω –∂–æ–æ–±—É–Ω –±–µ—Ä–∏–ø –∫–æ—é—É“£—É–∑–¥—É —Å—É—Ä–∞–Ω–∞–±—ã–∑!</p>

          <button
            onClick={() => {
              if (user) {
                setModal(true);
              } else {
                toast.warn("‚ö†Ô∏è –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É!", {
                  position: "bottom-right",
                  autoClose: 4000,
                  theme: "colored",
                  transition: Bounce,
                });
                nav("/");
              }
            }}
          >
            –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É
          </button>
        </div>
      </div>

      {modal && (
        <div className="logout-modal">
          <div className="logout-modal__content">
            <div className="logout-modal__buttons">
              <button className="a" onClick={() => setModal(false)}>
                X
              </button>
              <input
                type="text"
                placeholder="–í–∞—à–µ –∏–º—è"
                value={name}
                onChange={(e) => setName(e.target.value)}
              />

              <div className="options">
                <label>
                  <input
                    type="radio"
                    name="answer"
                    value="–°”©–∑—Å“Ø–∑ –∫–µ–ª–µ–º"
                    checked={answer === "–°”©–∑—Å“Ø–∑ –∫–µ–ª–µ–º"}
                    onChange={(e) => setAnswer(e.target.value)}
                  />
                  –°”©–∑—Å“Ø–∑ –∫–µ–ª–µ–º
                </label>
                <label>
                  <input
                    type="radio"
                    name="answer"
                    value="–¢–∏–ª–µ–∫–∫–µ –∫–∞—Ä—à—ã, –∫–µ–ª–µ –∞–ª–±–∞–π–º"
                    checked={answer === "–¢–∏–ª–µ–∫–∫–µ –∫–∞—Ä—à—ã, –∫–µ–ª–µ –∞–ª–±–∞–π–º"}
                    onChange={(e) => setAnswer(e.target.value)}
                  />
                  –¢–∏–ª–µ–∫–∫–µ –∫–∞—Ä—à—ã, –∫–µ–ª–µ –∞–ª–±–∞–π–º
                </label>
              </div>
            </div>

            <button onClick={sendToTelegram}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Footer;
