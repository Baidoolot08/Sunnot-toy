import React, { useState, useEffect } from "react";
import "./Anketa.scss";
import axios from "axios";
import { useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";

const Anketa = () => {
  const [name, setName] = useState("");
  const [chisla, setChisla] = useState("");
  const [answer, setAnswer] = useState("");
  const [modal, setModal] = useState(false);
  const [sent, setSent] = useState(false); // –∞–Ω–∫–µ—Ç–∞ –∂”©–Ω”©—Ç“Ø–ª–≥”©–Ω–±“Ø

  const nav = useNavigate();
  const { user } = useSelector((s) => s.userReducer);

  useEffect(() => {
    const alreadySent = localStorage.getItem("sent");
    if (alreadySent) setSent(true);
  }, []);

  const clearForm = () => {
    setName("");
    setChisla("");
    setAnswer("");
  };

  const isEmpty = (val) => val.length === 0 || val.replaceAll(" ", "") === "";

  const sendToTelegram = () => {
    if (sent) {
      alert("‚ö†Ô∏è –°–∏–∑ –∞–Ω–∫–µ—Ç–∞ —Ç–æ–ª—Ç—É—Ä–¥—É“£—É–∑!"); // ‚úÖ alert –∞—Ä–∫—ã–ª—É—É –±–∏–ª–¥–∏—Ä“Ø“Ø
      return;
    }

    if (isEmpty(name) || isEmpty(answer) || isEmpty(chisla)) {
      alert("–ë–∞—Ä–¥—ã–∫ —Ç–∞–ª–∞–∞–ª–∞—Ä–¥—ã —Ç–æ–ª—Ç—É—Ä—É“£—É–∑!");
      return;
    }

    const chat_id = "-1002708842759";
    const token = "7784579498:AAE4SwLV99YhzCxGvp8so-GaYdzWdQb7WrU";
    const api_url = `https://api.telegram.org/bot${token}/sendMessage`;

    const userData = {
      chat_id,
      parse_mode: "HTML",
      text: `
<b>üìã –ñ–∞“£—ã –∞–Ω–∫–µ—Ç–∞</b>\n
<b>üë§ –ê—Ç—ã:</b> ${name}
<b>üë• –ö–∞–Ω—á–æ–æ –∫–µ–ª–µ—Ç:</b> ${chisla}
<b>‚úÖ –ñ–æ–æ–ø:</b> ${answer}
	  `,
    };

    axios
      .post(api_url, userData)
      .then(() => {
        alert("‚úÖ –ê–Ω–∫–µ—Ç–∞ –∂–∏–±–µ—Ä–∏–ª–¥–∏!");
        clearForm();
        setModal(false);
        setSent(true);
        localStorage.setItem("sent", "true"); // –∫–∞–π—Ä–∞ –∂–∏–±–µ—Ä–µ –∞–ª–±–∞–π—Ç
      })
      .catch(() => {
        alert("‚ùå –ê–Ω–∫–µ—Ç–∞ –∂–∏–±–µ—Ä–∏–ª–≥–µ–Ω –∂–æ–∫!");
      });
  };

  return (
    <div id="request">
      <div className="container">
        <div className="request">
          <h1>–ê–ù–ö–ï–¢–ê</h1>
          <p>–¢–æ–π–≥–æ –∫–µ–ª–µ—Ä–∏“£–∏–∑–¥–∏ –±–µ–ª–≥–∏–ª–µ–ø –∫–æ—é“£—É–∑!</p>

          <button
            onClick={() => {
              if (user) {
                setModal(true);
              } else {
                alert("‚ö†Ô∏è –ö–∏—Ä–∏–ø –∞–Ω–∞–Ω —Ç–æ–ª—Ç—É—Ä—É“£—É–∑!");
                nav("/");
              }
            }}
          >
            –ê–Ω–∫–µ—Ç–∞–Ω—ã —Ç–æ–ª—Ç—É—Ä—É—É
          </button>
        </div>
      </div>

      {modal && (
        <div className="logout-modal">
          <div className="logout-modal__content">
            <div className="logout-modal__buttons">
              <button className="a" onClick={() => setModal(false)}>
                X
              </button>
              <input
                type="text"
                placeholder="–ê—Ç—ã“£—ã–∑"
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
              <input
                type="text"
                placeholder="–ö–∞–Ω—á–∞ –∞–¥–∞–º –±–æ–ª—É–ø –∫–µ–ª–µ—Å–∏–∑?"
                value={chisla}
                onChange={(e) => setChisla(e.target.value)}
              />

              <div className="options">
                <label>
                  <input
                    type="radio"
                    name="answer"
                    value="–°”©–∑—Å“Ø–∑ –∫–µ–ª–µ–º"
                    checked={answer === "–°”©–∑—Å“Ø–∑ –∫–µ–ª–µ–º"}
                    onChange={(e) => setAnswer(e.target.value)}
                  />
                  –°”©–∑—Å“Ø–∑ –∫–µ–ª–µ–º
                </label>
                <label>
                  <input
                    type="radio"
                    name="answer"
                    value="–ö–µ–ª–µ –∞–ª–±–∞–π–º"
                    checked={answer === "–ö–µ–ª–µ –∞–ª–±–∞–π–º"}
                    onChange={(e) => setAnswer(e.target.value)}
                  />
                  –ö–µ–ª–µ –∞–ª–±–∞–π–º
                </label>
              </div>
            </div>

            <button onClick={sendToTelegram}>–ñ”©–Ω”©—Ç“Ø“Ø</button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Anketa;
